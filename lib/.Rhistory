for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:nrow(file_df))
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")[[1]]
for(k in 1:length(author_list))
{
author_list[k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = list(author_list)
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
View(test)
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:nrow(file_df))
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = as.vector(strsplit(author_string, split = ";")[[1]])
for(k in 1:length(author_list))
{
author_list[k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = list(author_list)
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
View(test)
author_list = as.vector(c("Vikas Arun", "Charles Renato"))
test = list(author_list)
test
test[[1]]
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:nrow(file_df))
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = as.vector(strsplit(author_string, split = ";")[[1]])
for(k in 1:length(author_list))
{
author_list[k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = list(author_list)
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
test[2,4]
View(test)
class(author_list)
author_list
author_list = c("Vikas Arun", "Charles Renato")
as.list(author_list)
list("Vikas Arun", "Charles Renato")
unlist(list("Vikas Arun", "Charles Renato"))
list(author_list)
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:nrow(file_df))
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")[[1]]
cat(paste("Class fo Author List", class(author_list)))
for(k in 1:length(author_list))
{
author_list[k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = list(author_list)
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:1)
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")[[1]]
cat(author_list)
for(k in 1:length(author_list))
{
author_list[k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = list(author_list)
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
filename = "../data/nameset/AGupta.txt"
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[1,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
author_id = 1.10
temp_split = strsplit(as.character(file_df[1,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")[[1]]
author_list
for(k in 1:length(author_list))
{
author_list[k] = trimws(author_list[k])
}
author_list
list(author_list)
blah = list(author_list)
blah
blah[[1]][6]
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:1)
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")[[1]]
cat(author_list)
for(k in 1:length(author_list))
{
author_list[k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = list(author_list)
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
View(test)
test[2,4]
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:nrow(file_df))
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")
cat(author_list)
for(k in 1:length(author_list))
{
author_list[[1]][k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = author_list
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:1)
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:nrow(file_df))
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")
for(k in 1:length(author_list))
{
author_list[[1]][k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = author_list
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
View(test)
warnings()
returnCleanData = function()
{
paper_df = as.data.frame(matrix(ncol = 6))
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
filenames = list.files("../data/nameset")[-13] #Returns list of all files and removes README file
for(i in 1:length(filenames))
{
filename = paste("../data/nameset/", filenames[i], sep = "")
file_df = read.delim2(file = filename, header = FALSE, sep = "\n")
for(j in 1:nrow(file_df))
{
temp_row = as.data.frame(matrix(ncol = ncol(paper_df)))
temp_number = strsplit(as.character(file_df[j,1]), split = " ")[[1]][1]
cluster_id = strsplit(temp_number, split = "_")[[1]][1]
citation_id = strsplit(temp_number, split = "_")[[1]][2]
author_id = paste(i, ".", cluster_id, sep = "")
temp_split = strsplit(as.character(file_df[j,1]), split = "[<>]")
temp_split = temp_split[[1]]
author_string = gsub("[[:digit:]]", "", as.character(temp_split[1]))
author_string = gsub("[_]", "", as.character(author_string))
author_string = trimws(author_string)
author_list = strsplit(author_string, split = ";")
for(k in 1:length(author_list))
{
author_list[[1]][k] = trimws(author_list[k])
}
temp_split = temp_split[temp_split != ""]
journal = temp_split[length(temp_split)]
title = temp_split[length(temp_split) - 1]
temp_row[1,1] = author_id
temp_row[1,2] = cluster_id
temp_row[1,3] = citation_id
temp_row[1,4] = author_list
temp_row[1,5] = title
temp_row[1,6] = journal
colnames(temp_row) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
paper_df = rbind(paper_df, temp_row, make.row.names = FALSE)
}
}
colnames(paper_df) = c("AuthorID", "ClusterID", "CitationID", "AuthorList", "Title", "Journal")
save(paper_df, file = "../output/CleanData.RData")
return(paper_df)
}
test = returnCleanData()
View(test)
setwd("C:/Users/Vikas/OneDrive/Cloud Workspace/Documents/Columbia/Senior/Applied Data Science/Project 4/Spr2017-proj4-team-5/lib")
library(stringr)
data.lib="../data/nameset"
data.files=list.files(path=data.lib, "*.txt")
data.files
## remove "*.txt"
query.list=substring(data.files,
1, nchar(data.files)-4)
query.list
## add a space
query.list=paste(substring(query.list, 1, 1),
" ",
substring(query.list,
2, nchar(query.list)),
sep=""
)
query.list
f.line.proc=function(lin, nam.query="."){
# remove unwanted characters
char_notallowed <- "\\@#$%^&?" # characters to be removed
lin.str=str_replace(lin, char_notallowed, "")
# get author id
lin.str=strsplit(lin.str, "_")[[1]]
author_id=as.numeric(lin.str[1])
# get paper id
lin.str=lin.str[2]
paper_id=strsplit(lin.str, " ")[[1]][1]
lin.str=substring(lin.str, nchar(paper_id)+1, nchar(lin.str))
paper_id=as.numeric(paper_id)
# get coauthor list
lin.str=strsplit(lin.str, "<>")[[1]]
coauthor_list=strsplit(lin.str[1], ";")[[1]]
#print(lin.str)
for(j in 1:length(coauthor_list)){
if(nchar(coauthor_list[j])>0){
nam = strsplit(coauthor_list[j], " ")[[1]]
if(nchar(nam[1])>0){
first.ini=substring(nam[1], 1, 1)
}else{
first.ini=substring(nam[2], 1, 1)
}
}
last.name=nam[length(nam)]
nam.str = paste(first.ini, last.name)
coauthor_list[j]=nam.str
}
match_ind = charmatch(nam.query, coauthor_list, nomatch=-1)
#print(nam.query)
#print(coauthor_list)
#print(match_ind)
if(match_ind>0){
coauthor_list=coauthor_list[-match_ind]
}
paper_title=lin.str[2]
journal_name=lin.str[3]
list(author_id,
paper_id,
coauthor_list,
paper_title,
journal_name)
}
data_list=list(1:length(data.files))
for(i in 1:length(data.files)){
## Step 0 scan in one line at a time.
dat=as.list(readLines(paste(data.lib, data.files[i], sep="/")))
data_list[[i]]=lapply(dat, f.line.proc, nam.query=query.list[i])
}
head(data.list)
help(save)
save(data_list, file = "../output/TZCleanData.RData")
